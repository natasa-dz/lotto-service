//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LottoServiceClient.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlayerCard", Namespace="http://schemas.datacontract.org/2004/07/LottoService")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(int[]))]
    public partial class PlayerCard : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object CallbackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GuessNumber1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GuessNumber2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfMatchesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoundNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] drawnNumbersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Bet {
            get {
                return this.BetField;
            }
            set {
                if ((this.BetField.Equals(value) != true)) {
                    this.BetField = value;
                    this.RaisePropertyChanged("Bet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Callback {
            get {
                return this.CallbackField;
            }
            set {
                if ((object.ReferenceEquals(this.CallbackField, value) != true)) {
                    this.CallbackField = value;
                    this.RaisePropertyChanged("Callback");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GuessNumber1 {
            get {
                return this.GuessNumber1Field;
            }
            set {
                if ((this.GuessNumber1Field.Equals(value) != true)) {
                    this.GuessNumber1Field = value;
                    this.RaisePropertyChanged("GuessNumber1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GuessNumber2 {
            get {
                return this.GuessNumber2Field;
            }
            set {
                if ((this.GuessNumber2Field.Equals(value) != true)) {
                    this.GuessNumber2Field = value;
                    this.RaisePropertyChanged("GuessNumber2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfMatches {
            get {
                return this.NumberOfMatchesField;
            }
            set {
                if ((this.NumberOfMatchesField.Equals(value) != true)) {
                    this.NumberOfMatchesField = value;
                    this.RaisePropertyChanged("NumberOfMatches");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Rank {
            get {
                return this.RankField;
            }
            set {
                if ((this.RankField.Equals(value) != true)) {
                    this.RankField = value;
                    this.RaisePropertyChanged("Rank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoundNumber {
            get {
                return this.RoundNumberField;
            }
            set {
                if ((this.RoundNumberField.Equals(value) != true)) {
                    this.RoundNumberField = value;
                    this.RaisePropertyChanged("RoundNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Score {
            get {
                return this.ScoreField;
            }
            set {
                if ((this.ScoreField.Equals(value) != true)) {
                    this.ScoreField = value;
                    this.RaisePropertyChanged("Score");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] drawnNumbers {
            get {
                return this.drawnNumbersField;
            }
            set {
                if ((object.ReferenceEquals(this.drawnNumbersField, value) != true)) {
                    this.drawnNumbersField = value;
                    this.RaisePropertyChanged("drawnNumbers");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IPlayer", CallbackContract=typeof(LottoServiceClient.ServiceReference1.IPlayerCallback))]
    public interface IPlayer {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayer/initPlayer", ReplyAction="http://tempuri.org/IPlayer/initPlayerResponse")]
        string initPlayer(string id, int amount, int guess1, int guess2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayer/initPlayer", ReplyAction="http://tempuri.org/IPlayer/initPlayerResponse")]
        System.Threading.Tasks.Task<string> initPlayerAsync(string id, int amount, int guess1, int guess2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayer/getPlayerCard", ReplyAction="http://tempuri.org/IPlayer/getPlayerCardResponse")]
        LottoServiceClient.ServiceReference1.PlayerCard getPlayerCard(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayer/getPlayerCard", ReplyAction="http://tempuri.org/IPlayer/getPlayerCardResponse")]
        System.Threading.Tasks.Task<LottoServiceClient.ServiceReference1.PlayerCard> getPlayerCardAsync(string id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPlayerCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IPlayer/onRoundEnd")]
        void onRoundEnd(LottoServiceClient.ServiceReference1.PlayerCard playerCard);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPlayerChannel : LottoServiceClient.ServiceReference1.IPlayer, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PlayerClient : System.ServiceModel.DuplexClientBase<LottoServiceClient.ServiceReference1.IPlayer>, LottoServiceClient.ServiceReference1.IPlayer {
        
        public PlayerClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public PlayerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public PlayerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public PlayerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public PlayerClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public string initPlayer(string id, int amount, int guess1, int guess2) {
            return base.Channel.initPlayer(id, amount, guess1, guess2);
        }
        
        public System.Threading.Tasks.Task<string> initPlayerAsync(string id, int amount, int guess1, int guess2) {
            return base.Channel.initPlayerAsync(id, amount, guess1, guess2);
        }
        
        public LottoServiceClient.ServiceReference1.PlayerCard getPlayerCard(string id) {
            return base.Channel.getPlayerCard(id);
        }
        
        public System.Threading.Tasks.Task<LottoServiceClient.ServiceReference1.PlayerCard> getPlayerCardAsync(string id) {
            return base.Channel.getPlayerCardAsync(id);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ILotto")]
    public interface ILotto {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILotto/LottoGame", ReplyAction="http://tempuri.org/ILotto/LottoGameResponse")]
        void LottoGame();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILotto/LottoGame", ReplyAction="http://tempuri.org/ILotto/LottoGameResponse")]
        System.Threading.Tasks.Task LottoGameAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILottoChannel : LottoServiceClient.ServiceReference1.ILotto, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LottoClient : System.ServiceModel.ClientBase<LottoServiceClient.ServiceReference1.ILotto>, LottoServiceClient.ServiceReference1.ILotto {
        
        public LottoClient() {
        }
        
        public LottoClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LottoClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LottoClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LottoClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void LottoGame() {
            base.Channel.LottoGame();
        }
        
        public System.Threading.Tasks.Task LottoGameAsync() {
            return base.Channel.LottoGameAsync();
        }
    }
}
